syntax = "proto3";

package template;

option go_package="./test";
service Giftbagcasual {
  rpc Ping(PingReq) returns(PingRes){};
  rpc GetGiftbag(GetGiftbagReq) returns(GetGiftbagRes){};
}


/*
  * @brief ping
  *
*/

// PingReq is the request of Ping
message PingReq {
  string name = 1;//comment:"用户名"
  message Sub {
    string age = 1;//validate:"required=true,pattern=^[^[0-9]A-Za-z]+([^[0-9]A-Za-z]+)*$,email,min_len=5,max_len=5,gt=1",comment:"年龄"
    message Test {
      string nameTest = 1;//validate:"required=false",comment:"测试名"
      message User {
        string nameUser = 1;//validate:"required=true,pattern=^[^[0-9]A-Za-z]+([^[0-9]A-Za-z]+)*$,email,min_len=5,max_len=5,gt=1",comment:"用户名"
      }
      User user = 2;//validate:"required=true",comment:"用户"
    }
    message Tests {
      string nameTest = 1;
    }
    Test test = 2;
    Tests tests = 3;
  }
  Sub sub = 2;
}

message User {
  string nameUser = 1;
}

message PingRes {
  string name = 1;
  message Sub {
    string age = 1;
  }
  Sub sub = 2;
}



message Operator {
  bool isSuper = 1;
  string userId = 2;
  string mobile = 3;
  string name = 4;
  repeated string orgId = 5;
  string channelId = 6;
}



message GetGiftbagReq {
  string name = 1;
  Operator operator = 2;
}
message GetGiftbagRes {
  MetaRes meta = 1;
}
//响应码
message MetaRes {
  //错误码
  string requestId = 1;
  int32 code = 2;
  string msg = 3;
}